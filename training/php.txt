Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2014-05-26T10:55:27+05:30

====== php ======
Created Monday 26 May 2014
online php 
http://sandbox.onlinephpfunctions.com/

for regular expression checking: http://www.regexpal.com/

navigating through php source code
http://lxr.php.net/xref/PHP_5_4/ext/standard/string.c#php_needle_char

how to view php source code :
http://nikic.github.io/2012/03/16/Understanding-PHPs-internal-function-definitions.html

setting php with sublime:
https://www.sitepoint.com/debugging-xdebug-sublime-text-3/

**compiling and building php internals**
http://php.net/manual/en/internals2.ze1.zendapi.php

**access objects with number as key**
https://stackoverflow.com/questions/10333016/how-to-access-object-properties-with-names-like-integers
https://stackoverflow.com/questions/30680938/how-can-i-access-an-array-object

*** HOW php works ***
php source and its extensions itself are written in C, which are compiled to generate .so files which gets loaded by apache
php written by us are interpreted and converted to OPCODE which gets executed, this OPCODE is run by php kind of VM ← limitation of interpreted languages, each time opcode has to be generated but compiled languages do it once
but accelearators xCache, APC cache the OPCODE according to time stamp and use it each time

any extension needs to be compiled with php source code, few extension.so files we get they are already compiled with php. for new or other extensions we need to compile php from source,

apache worker MPM will create various threads and php will be loaded in these threads, php loaded here should be thread safe as it can access other thread's data; but php's thread safety is disputed
http://stackoverflow.com/questions/1623914/what-is-thread-safe-or-non-thread-safe-in-php

printing to file no server:
			$myFile = "d:/testFile.txt";
			$fh = fopen($myFile, 'w') or die("can't open file");
			$stringData = print_r($td_review, true);
			$stringData .= self::calculate_total($td_review);

			fwrite($fh, $stringData);
			fclose($fh);

*** syntax error in php ***
for file in $(git diff --name-only iag_v1 a43d1da | grep .php); do php -l $file;  done;

***** namespace and use in php *****
to avoid conflicts between names of classes, methods, variable names , constants etc we can give namespaces; its similar to directory structure, two files with same name can reside in different dirs

but when we require file from different namespaces into our file they can conflict due to same classnames, now we USE use
use provides aliasing of imported namespaces, namespace\class, namespace\functions, namespace\constats etc... it is similar to we can't copy same name directories to our directory although they are in different directories originally; but we can symlink them and give them different names
similarly use namespace\classname as class1

***** compile php *****
php -l file.php

***** passing interface object in method *****
it means we can pass object of any class which implements this interface

***** Udemy *****
if your application uses security/authentication/important functionality; we should use require rather than include

use smtp to send mail and imap to retreive messages

cookies are ok for simple web application; but for large and complex web applications use sessions

DES, extDES, MD5 should not be used as they are vulnerble
Blowfist, sha256, sha512 can be used

***** PHPUnit *****
setup and teardown funcitons in phpunit help in fixtures
we can define testsuitenames and order in which files will be exectuted in phpUnits' XML file
we can define execution timeout in xml file

in build.xml we include app/phpunit.xml which contains config gor phpunit

we can use reflection class to ut private methods:
public function invokeMethod(&$object, $methodName, array $parameters = array())
{
	$reflection = new \ReflectionClass(get_class($object));
	$method = $reflection->getMethod($methodName);
	$method->setAccessible(true);

	return $method->invokeArgs($object, $parameters);
}

use phpunit --coverage-html coverage 

http://www.phpclasses.org/blog/post/117-PHP-compiler-performance.html
http://www.scribd.com/doc/18171982/PHP-Compiler-Internals
http://stackoverflow.com/questions/2772400/how-does-php-interface-with-apache

**precedence order in php**
$person->$property['first'] will be evaluated differently on php 5 and 7.
use {} for explicit precedence; eg: $person->{$property['first']}

**symfony run server**
 php bin/console server:run

**debugging**
https://confluence.jetbrains.com/display/PhpStorm/Zero-configuration+Web+Application+Debugging+with+Xdebug+and+PhpStorm

remote debuggin in xdebug: https://xdebug.org/docs/remote#starting

ini_set("display_errors", "On");
error_reporting(E_ALL);

register _shutdown_function can be helpful:
function shutdown()
{
	echo 'Script executed with success', PHP_EOL;
}
register_shutdown_function('shutdown');

php script time mysql server has gone away:
http://stackoverflow.com/questions/7282707/php-mysql-server-has-gone-away
http://stackoverflow.com/questions/26882916/error-message-mysql-server-has-gone-away-when-running-an-update-query

__questiosns__
~~why use private static variables  ~~for singletons



__todo__
