Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2017-06-26T22:12:59+05:30

====== mongo ======
Created Monday 26 June 2017

docker run --name mongo-dev -d -v /data/mongo_docker_data:/data -p 27017:27017 my_mongo
mongo localhost:27017

 pecl install mongodb

mongo has dropped support for master slave config, in place use sharded arch

mongo in single server
database > collection > 
mongodb stores data in in linked list of extents. pages are on mercy of OS to be swapped out on disk which does it every 60s. index is b-tree pointing to data, it is stored in extents as well. uses journaling to ensure recovery which fsyncs every 100ms. during crash this 100ms worth of data can be lost. journaling is required because data is pushed out of sequence when synced to disk by OS.


mongo in cluster
https://www.linode.com/docs/databases/mongodb/build-database-clusters-with-mongodb
config/data server: mongod
query server: mongos
config server stores meta info about cluster, database, collection, chunks; gets updated on chunk movement, node failures etc. generally 1/3 config servers are used, which remain in-sync using 2PC. query server gets updated on change in config server info. queries are routed to data servers thruogh query servers, sometimes query server aggregate data too.
data server: data is shared at kept here. database, collection can be sharded through cli


3 mongos will behave as sentinel, will add configs server details in config file, add dataserver set
config server doesn't know about data server
1p and 2sec mongo db sever is created dataset is created

sharding in mongod
https://docs.mongodb.com/manual/sharding/#data-partitioning
sharding can be done at database/collection level
First sharding at database level needs to be enabled, then at collection level. Collections are not automatically distributed across shards until you enable sharding on them and then add data.
we can dynamically add/remove shards, mongo will auto balance the chunks of data

**node mongoose concepts**
https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/mongoose

mongodb uses memory mapped file:
https://ayende.com/blog/162791/on-memory-mapped-files

mongo cluster
https://www.alibabacloud.com/blog/high-availability-mongodb-cluster-configuration-solutions_490866

mongo storage internals architecture
https://stackoverflow.com/questions/9948483/mongodb-database-architecture
https://2013.nosql-matters.org/bcn/wp-content/uploads/2013/12/storage-talk-mongodb.pdf

why odd # of config servers
https://dba.stackexchange.com/questions/91194/why-does-mongodb-require-three-config-servers

new in mongo3.2
https://www.mongodb.com/blog/post/what-s-new-in-mongodb-3-2-part-1-extending-use-cases-with-new-pluggable-storage-engines

mongo template vs mongo repository
https://stackoverflow.com/questions/17008947/whats-the-difference-between-spring-datas-mongotemplate-and-mongorepository

add to set in aggregation in mongodb
https://stackoverflow.com/questions/47140009/spring-data-mongodb-addtoset-with-complex-object

schema design in mongodb
https://www.mongodb.com/blog/post/6-rules-of-thumb-for-mongodb-schema-design-part-1
Denormalizing only makes sense when there’s an high ratio of reads to updates.
how you model your data depends – entirely – on your particular application’s data access patterns


problems:
ok for large reads, bad for writes
fragmentations


capped collection : good for logs, caching
You cannot delete documents from a capped collection. To remove all documents from a collection, use the drop() method to drop the collection and recreate the capped collection. No sharding. 

 maximum BSON document size is 16 megabytes.

For the MMAPv1 storage engine, intervening write operations on a document may result in a cursor that returns a document more than once if that document has changed.

query steps:
collection, query-criteria, projection, cursor-modifier

aggregation steps: 
match stage, group stage

 A collection can only have one text search index, but that index can cover multiple fields.


**questions**
~~diff b/w mongo and other binaries~~
