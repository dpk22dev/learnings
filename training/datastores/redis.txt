Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2017-11-28T23:36:46+05:30

====== redis ======
Created Tuesday 28 November 2017

running servers:
 /etc/init.d/redis_6379 start
 /etc/init.d/redis_6380 start
 /etc/init.d/redis_6381 start

https://stackoverflow.com/questions/37953019/wrongtype-operation-against-a-key-holding-the-wrong-kind-of-value-php

cat redirectlogs | awk -F',' '{print " SET \""$1"\" \""$1"\" \n"}' | redis-cli -p 6381 --pipe

http://oldblog.antirez.com/post/redis-persistence-demystified.html

redis uses database 0,1,2 etc in single server mode. cluster mode doesn't support it.
we can dynamically add/remove nodes from cluster; 
redis distriutes keys based on mod operation, we can send key on same shard using hashtag eg:  {user1000}.following, then only user1000 will be used for hashing

pipelining is technique used by servers to accept multiple requests, process them and send response in single go. so instead of server waiting for each response to be read by client, it collects them in memory and responds back with a single response. This performs well as read/write sync call by user process has to context switch to kernel mode causing time delay. redis, pop3 mail server use this optimization technique. benchmarking on same machine for networked server is not right way because server OS has to context switch betwween server and client, majorly involving context switching time.

https://www.pluralsight.com/guides/redis-as-a-dynamic-interconnecting-datastore

does redis use consistent hashing
https://stackoverflow.com/questions/50246763/does-redis-cluster-use-consistent-hashing

redis geohash tutorial
https://www.compose.com/articles/a-quick-guide-to-redis-3-2s-geo-support/

sentinel vs cluster
https://stackoverflow.com/questions/31143072/redis-sentinel-vs-clustering
https://medium.com/@amila922/redis-sentinel-high-availability-everything-you-need-to-know-from-dev-to-prod-complete-guide-deb198e70ea6
redis cluster itself provide failover for selecting master from slave in case of failure; don't need sentinel in cluster


good use cases of redis
https://redis.io/documentation

memory allocation/ deallocation in redis
https://redis.io/topics/memory-optimization

redlock with timeout and retry can be used deadlock free synchronization

redis can send some keys for cache to client. it can broadcast if cached key changes or for any key changes
partitioning Â± : https://redis.io/topics/partitioning

**questions**
master-slave vs sentinel vs cluster
what will happen if we have 9 sentinals and set 2 as quorum in some partitioning
how app will distribute writes to new master after quorum
what problems can arise in cluster quorum: edge cases
	writes when quorum is happening and master doesn't know about it
	old master comes up and thinks it master
are read-writes auto distributed
does it use consistent hashing
	no
how list/set are distributed




