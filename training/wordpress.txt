Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2014-06-02T17:48:37+05:30

~~wordpress~~
Created Monday 02 June 2014

dev: microsite.infoedge.com
live: companies.naukri.com

***** change blog name ******
 select * from wp_options where option_name = 'siteurl';
 select * from wp_options where option_name = 'home';  
change url in wp-config.php


***** urls on srp page *****
url on srp page for career-site should be career-site based, eg: careers.hcl.com so in curl request we have to change url to server url

career sites don't have to do anything with site_mapping table; 
if made_live is checked
	if request is from naukri entry is created/updated in site_mapping table with flag=n
	if request is from career; domain-mapping is queried; domain is fetched and entry is created/updated in site_mapping table with flag=c
else
	entry is removed from site_mapping table
	
if CSM finds entry with flag=c it shows works as it likes

if JD finds entry in site-mapping table it shows job description according to theme of site created else it shows
JD according to naukri theme.


***** steps to set up copy from dev server *****
copy database in dump files and create database locally
change wp-config.php acc to local database settings
define('DOMAIN_CURRENT_SITE', 'microsite.infoedge.com'); to whatever entry present in database
remember to put both local-address like local.careersite.com and microsite.infoedge.com in [[/etc/hosts]] file


***** WPMU *****
Previously when you hosted unlimited blogs on one installation you would use WordPress MU (also known as WordPress Multiuser and WPMU).  WordPress and WordPress MU have now merged.

This now means you can install WordPress as:

1)    A stand alone WordPress site.
2)   Complete an additional step after installing WordPress to enable WordPress Multisite to create a network.

***** don't forget *****
to save
use meta-slider to show sliding images
setings -> theme-options -> home page content option can be set to About to show content of About page

otherwise we have widget 

text widget is helpful if we want to insert images to a slider in sidebar


for themes we can refer to already existing projects:
t1 → tcs_jobs
vertical1 → accenture
vertical2 → tieto
minimal → ibibo

we can use shortcodes for inserting pics, slides, videos etc...
video: [video-list coloumns='3' count=1 ]
people: [people-list coloumns='3' count=1 ] these people-list are in php code in shortcodes.php

inc/site_options.php → mapset.php
shortcode.php → contains refs for shortcodes
functions.php 

we have already written contact-us page which can show google maps

widgets can be page specific or global to whole website

svn account
how the links between pages work; how pages communicate
can't see pages in server directory... so can't open them in browser


http://microsite.infoedge.com/dummy/wp-admin
http://localhost/wordpress/wp-admin/
http://microsite.infoedge.com/dummy/

how wordpress uses mysql
how wordpress works
directory structure of wordpress
analysis of theme in wordpress say vertical1
creating plugin and themes in wordpress

*** devloping plugin: modifying wordpress behaviour***
simple .php file is also sufficient
write functions only if don't want classes
actions and filters

    add_filter('wp_title', 'hongkiat_func');  

Actions are similar to filters in that they don’t work on bits of data but instead target pre-defined areas in your templates and admin panel. As an example you can apply an action whenever you update or edit a page’s content. WordPress offers a comprehensive actions list.

    add_action('save_post', 'notify');  


another way for a plugin to modify WordPress's behavior is to override WordPress functions. In fact, there is a small set of functions WordPress intends for plugins to redefine. These are called Pluggable Functions and they are defined in wp-includes/pluggable.php.

If you take a peek into the core, you will see that add_action is actually a wrapper function for add_filter. Filters change data while actions allow us to do stuff.
You would want to use an action where you need to do something at a certain point in time... add options to the database or print css or javascript.
You should use a filter where you would want to alter the value of some data that WordPress has passed through the apply_filters() function.

create your own action hook by putting do_action("my_hook") in theme's function.php page;
then put my_plugin.php in plugins directory

similarly,  apply_filter() creates filter hook.

*** theme development ***
bloginfo('stylesheet_url');
get_header(); → will include the header.php file and the code in it in the main page

functions.php: defines everything for theme: its menus, font-size, admin-font, jwidget areas, extend wordpress body-class, excerpt length, 

php _e('Categories') → return list of categories

wordpress tables details can be found at: http://codex.wordpress.org/Database_Description
$wpdb object can be used to directly access wordpress tables

commonly used wordpress classes: WP_Query, WP_User, WpsOption, WP_Widget, WP_Error, WP_Screen, WP_Filesystem, 

slug concept, shortcodes

how does linking of apache and wordpress database happens... how do apache know when it doesn't know any file in wordpress dir... http://microsite.infoedge.com/tieto/ → how is it resolved

try diff b/w vertical/404.php and t1/404.php and so on if we can find logical difference

how templates affect themes; 

in themes code where do they call template functions

diff classes avail in wp-inc dir

basic overview of what functions do in these files:
[[/common/curl_reqst.php,]] [[/config/config.php',]] 

why we need to differentiate b/w theme and templates
what is lifetime of php variables; objects

curl: curl_exec makes it easy to quickly and easily do GET/POST requests, receive responses from other servers like JSON and download files.

******************* ask **************
SVN URL  → get new url
Backup → live servers running on lfvsfcp10194.dn.net and have backup.
Dashboard - wordpress 
Careersite Vs Microsite
Site
themes
Plugins / widgets
What is wordpress
Wordpress - directory structure
Careersite - product
Domain Mapping
Teams - Product, Tech, UI, Design, QA
Database Architecture → from net
Apply Integration
Jobseaker Integration
Setup - Live/Test/Dev 
deployment
Code
Current Projects → 3 new themes , Facebook Tab, Self Server
Problems Faced
Client Issues
Technical Changes / Refactoring

what are files that we have changed 
discuss any class code __constructur()

*** files that has been changed ****
wp-settings.php → $GLOBAL[] added


[[/home/dpk/rishab-wordpress/wordpress/wp-includes/general-template.php]]

what does do_action() do?

add_action('publish_post', array('emailer', 'send'));
here send is static function in emailer class

if class doesn't have static function; object is sent to array as
$myEmailClass = new emailer();

add_action('publish_post', array($myEmailClass, 'send'));
remove_action('action_hook','action_function')

add_filter ( 'hook_name', 'your_filter', [priority], [accepted_args] );
remove_filter('filter_hook','filter_function') 

In fact, there is a small set of functions WordPress intends for plugins to redefine. These are called Pluggable Functions and they are defined in wp-includes/pluggable.php.

*** Using the Loop ***

looping in wordpress:
If you are using The Loop inside your own design (and your own design is not a template), set WP_USE_THEMES to false:
<?php define('WP_USE_THEMES', false); get_header(); ?>

loop is as follow:
<?php if ( have_posts() ) : while ( have_posts() ) : the_post(); ?>
----
<?php endwhile; else: ?>
<p><?php _e('Sorry, no posts matched your criteria.'); ?></p>
<?php endif; ?>

The Loop should be placed in index.php and in any other Templates used to display post information.

Be sure to include the call for the header template at the top of your Theme's templates. If you are using The Loop inside your own design (and your own design is not a template), set WP_USE_THEMES to false:

<?php define('WP_USE_THEMES', false); get_header(); ?>

The loop starts here:

<?php if ( have_posts() ) : while ( have_posts() ) : the_post(); ?>

and ends here:

<?php endwhile; else: ?>
<p><?php _e('Sorry, no posts matched your criteria.'); ?></p>
<?php endif; ?>

This is using PHP's alternative syntax for control structures, and could also be expressed as:

<?php 
	if ( have_posts() ) {
		while ( have_posts() ) {
			the_post(); 
			//
			// Post Content here
			//
		} // end while
	} // end if
?>

*** functions in php ***
The files of WordPress define many useful PHP functions.
1)  Some of the functions, known as Template Tags, are defined especially for use in WordPress Themes. 
2) There are also some functions related to actions and filters (the Plugin API), which are therefore used primarily for developing Plugins. 
3) The rest are used to create the core WordPress functionality. 

1) Post, Custom Post Type, Page, Attachment and Bookmarks Functions
	a) Posts
	b) Custom Post Type
	c) Post insertion/removal
	d) Pages
	e) Custom Fields (postmeta)
	f) Attachments
	g) Bookmarks
	h) Terms
	i) Others
2) Category, Tag and Taxonomy Functions
	a) Categories
	b) Category Creation
	c) Taxonomy
3) User and Author Functions
	a) Admins, Roles and Capabilities
	b) Users and Authors
	c) User meta
	d) User insertion/removal
	e) Login / Logout
4) Feed Functions
5) HTTP API Functions
6) Comment, Ping, and Trackback Functions
	a) Comments Loop
	b) Comments Pagination
7) Action, Filter, and Plugin Functions
	a) Filters
	b) Actions
	c) Plugins
	d) Widgets
	e) Settings
	f) Shortcodes
8) Theme-Related Functions
	a) Include functions
	b) Other functions
9) Formatting Functions
10) Multisite functions
	a) multisite administration
	b) multisite functions
11) Miscellaneous Functions
	a) Time/Date Functions
	b) Serialization
	c) Options
	d) Transients
	e) Admin Menu Functions
	f) Toolbar functions
	g) Form Helpers
	h) Nonces and Referers (Security)
	i) Localization
	j) Cron
	k) Localization
	l) sql
	m) Script and Style Registration
	n) Miscellaneous
	
**** tables **** 


wp_commentmeta 	Each comment features information called the meta data and it is stored in the wp_commentmeta. 	  
wp_comments 	       The comments within WordPress are stored in the wp_comments table. 	
wp_links 	                       The wp_links holds information related to the links entered into the Links feature of WordPress. (This feature has been deprecated, but can be re-enabled with the Links Manager plugin.) 	

wp_options 	               The Options set under the Administration > Settings panel are stored in the wp_options table. See Option Reference for option_name and default values. 	
wp_postmeta 	       Each post features information called the meta data and it is stored in the wp_postmeta. Some plugins may add their own information to this table. 	
wp_posts 	                       The core of the WordPress data is the posts. It is stored in the wp_posts table. Also Pages and navigation menu items are stored in this table. 	
wp_terms 	               The categories for both posts and links and the tags for posts are found within the wp_terms table. 	
wp_term_relationships 	Posts are associated with categories and tags from the wp_terms table and this association is maintained in the wp_term_relationships table. The association of links to their respective categories are also kept in this table.

wp_term_taxonomy 	This table describes the taxonomy (category, link, or tag) for the entries in the wp_terms table.
wp_usermeta 	        Each user features information called the meta data and it is stored in wp_usermeta. 	
wp_users 	                        The list of users is maintained in table wp_users. 	

multisite tables
wp_blogs 	Each site created is stored in the table, wp_blogs. 	
wp_blog_versions 	The current database version status of each site is maintained in the wp_blogs_versions table and is updated as each site is upgraded. 	
wp_registration_log 	The wp_registration_log records the admin user created when each new site is created. 	
wp_signups 	                This table holds the user that have registered for a site via the login registration process. User registration is enable in Administration > Super Admin > Options. 	
wp_site 	                       The wp_site table contains the main site address. 	
wp_sitecategories      If global terms (global_terms_enabled = true) are enabled for a site the wp_sitecategories table holds those terms. 	
wp_sitemeta 	               Each site features information called the site data and it is stored in wp_sitemeta. Various option information, including the site admin is kept in this table. 
wp_users 	                      The list of all users is maintained in table wp_users. Multisite add two fields not in the stand-alone version.	
wp_usermeta 	      This table is not re-create for multisite, but meta data of users for each site are stored in wp_usermeta. 	
Site Specific Tables    The data of the main site are stored in existing unnumbered tables. The data of additional sites are stored in new numbered tables. eg:  wp_2_commentmeta, wp_2_comments 	

*** mod_rewrite ***
mod_rewrite is an extension module of the Apache web server software which allows for "rewriting" of URLs on-the-fly. Rewrite rules use regular expressions to parse the requested URL from the client, translate it into a different URL, and serve the content of this new URL under the original URL or pointing the client to make the new URL request.

WordPress uses mod_rewrite for its permalink structure, and also for multisite networks, which are both optional functionality. 

Many blogs make their content available in feed form for the convenience of readers using news aggregators. WordPress can generate feeds in RSS and/or Atom formats.

*** Nonce ***
Nonce is used for security purposes to protect against unexpected or duplicate requests that could cause undesired permanent or irreversible changes to the web site and particularly to its database. Specifically, a nonce is an one-time token generated by a web site to identify future requests to that web site.

*** permalinks ***
A permalink is a URL at which a resource or article will be permanently stored.
 Permalinks allow users to bookmark full articles at a URL they know will never change, and will always present the same content. 

Within the WordPress interface, "ping" is sometimes used to refer to Pingbacks and Trackbacks. Pingback lets you notify the author of an article if you link to his article

*** slug ***
A few lowercase words separated by dashes, describing a post and usually derived from the post title to create a user-friendly (that is readable and without confusing characters) permalink. Slugs are meant to be used with permalinks as they help describe what the content at the URL is. 

*** post type ***
Post type refers to the various structured data that is maintained in the WordPress posts table. Native (or built-in) registered post types are post, page, attachment, revision, and nav-menu-item. Custom post types are also supported in WordPress and can be defined with register_post_type(). Custom post types allow users to easily create and manage such things as portfolios, projects, video libraries, podcasts, quotes, chats, and whatever a user or developer can imagine.

*** quick tag ***
A Quicktag is a shortcut, or one-click button, that inserts HTML code into your posts.

*** screen ***
In WordPress a screen is a web page used for managing part of a weblog (site) or network.
class: WP_screen

*** shortcode ***
A Shortcode is a technique for embedding a snippet of PHP code into the body of a page or other content item. 
eg: [gallery] gives the content of gallery plugin into current post.
both enclosing and non-enclosing shortcodes are possible.

*** Taxonomy,  term, category and tags ***
A taxonomy allows for the classification of things. In WordPress, there are two built-in taxonomies, categories and tags.

In WordPress, a term is a classification, group or subset of a Taxonomy, where the latter can be a Category, Tag or Custom Taxonomy. By default, terms have a title, a slug and a description.

category: defines category of post. eg: OS

A Tag is a keyword which describes all or part of a Post. eg: post can be tagged as Unix, Linux, operating systems

*** theme, template ***
A theme is a collection of files that work together to produce a graphical interface with an underlying unifying design for a weblog.
the content is generated "behind the scenes" by various template files. The template files and the style sheet are stored together as a WordPress Theme. 

In WordPress a template is a file that defines an area of the web pages generated by a theme. For example, there is typically a template for the header area at the top of the web pages, a template for the content, a template for the sidebars, and so on. Some templates (the header and footer template files for example) are used on all the web pages, while others are used only under specific conditions.

*** roles and capabilities ***
WordPress has six pre-defined roles: Super Admin, Administrator, Editor, Author, Contributor and Subscriber. Each role is allowed to perform a set of tasks called Capabilities.
add_cap() and remove_cap() , add_role() and remove_role() functions are used.

     Super Admin – somebody with access to the site network administration features and all other features. See the Create a Network article.
    Administrator – somebody who has access to all the administration features within a single site.
    Editor – somebody who can publish and manage posts including the posts of other users.
    Author – somebody who can publish and manage their own posts.
    Contributor – somebody who can write and manage their own posts but cannot publish them.
    Subscriber – somebody who can only manage their profile. 

*** update services, ping, ping-back, track-back ***
Update Services are tools you can use to let other people know you've updated your blog. WordPress automatically notifies popular Update Services that you've updated your blog by sending a XML-RPC ping each time you create or update a post.

Trackbacks and pingbacks are methods for alerting blogs that you have linked to them.

A pingback is a type of comment that’s created when you link to another blog post where pingbacks are enabled. The best way to think about pingbacks is as remote comments:

1) Person A posts something on his blog.
2) Person B posts on her own blog, linking to Person A’s post. This automatically sends a pingback to Person A when both have pingback enabled blogs.
3) Person A’s blog receives the pingback, then automatically goes to Person B’s post to confirm that the pingback did, in fact, originate there.

To create a pingback, just link to another blog post. If that post has pingbacks enabled, the blog owner will see a pingback appear in their comments section that they can approve.

Trackbacks are a way to notify legacy blog systems that you’ve linked to them. If you link to a WordPress blog they’ll be notified automatically using pingbacks, no other action necessary.

Trackbacks are manual whereas Pingbacks are automatic (different communication technology). Pingbacks do not send any content. In trackbacks an excerpt of the content is sent. 

*** file callings ****
index.php
	wp-blog-header.php
		wp-load.php
			wp-config.php
				wp-settings.php
					WPINC/load.php { functions needed to load wordpress}
					WPINC/default-constants.php { memory limit, content-dir, cookie, autosave, default-theme etc global vars are declared here}
					WPINC/version.php { define db, versions }
					WPINC/compat.php { define functions if not exist like json_decode, json_encode }
					WPINC/functions.php{ misc functions are here}
						WPINC/option.php{ add-option, delete-option etc are defined here }
					WPINC/class-wp.php{ init() and other functions are here; wordpress environment set-up class}
					WPINC/class-wp-error.php{ WP_Error class and functions are defined here }
					WPINC/plugin.php{ action, filter, hooking functions}
					WPINC/pomo/mo.php
						translations.php{  Gettext_translations, NOOP_translations class }
							./entry.php{Translation_Entry class}
						streams.php{ POMO_ classes }
					if multisite then multisite phps are loaded as below:
					WPINC/ms-blogs.php{ interaction with blog db}
					WPINC/ms-settings.php
						ms-load.php
						ms-default-constants.php{ constants like COOKIE_PATH, SUBDOMAIN, VHOST etc }
					WPINC/default-filters.php{ default filters, actions for most of hooks are defined}
					
					.
					.
					.
					rest of WPINC/*.php are loaded here
		template-loader.php
			wp-trackback.php

*** slashes in wordpress ***
WordPress has different rules for different fields. The wp_site and wp_blogs tables can NOT have http:// or a trailing slash at the end of the domain name, whereas in the wp_options table, it is required to have the http:// at the beginning. In the wp_sitemeta table it is required to have http:// at the beginning and a trailing slash at the end.

*** SEO working ***
when elements are searched in qsb: url is change to keyword-jobs or keywords-jobs-in-location URL which is sent to UI.

wp-loaded is fired when WP, all plugins, theme are fully loaded and instantiated.

* wordpress **function.php ***
to change the default behaviors of WordPress is using a file named functions.php.
Applies only to that theme. 
Can have numerous blocks of code used for many different 

*** writing wordpress plugin ***
adds a specific set of features or services to the WordPress weblog, which can be seamlessly integrated with the weblog using access points and methods provided by the WordPress Plugin Application Program Interface (API).

add_option() for adding options
get_options() get value corresponding to option
update_option() update value of option

*** Widgets ***
WordPress Widgets add content and features to your Sidebars. While widget areas typically occur in webpage sidebars, a theme can place widget areas anywhere on a page. There are two built-in WordPress RSS or Feed Widgets. 
RSS links widget: This widget does not display feed content, just the links to the feeds.

Posts will displays the most recently published content in their feed reader.
Comments displays the most recent comments in their feed reader.
Posts and Comments displays a combination of both in their feed reader. 

The visitor will typically click the link to add the feed to their feed reader. 

The RSS Widget displays the most recently published content from any source with an active feed. 



links:
http://codex.wordpress.org/Introduction_to_Blogging
http://codex.wordpress.org/Glossary#Filter
http://codex.wordpress.org/Roles_and_Capabilities
http://codex.wordpress.org/Plugin_API 
http://codex.wordpress.org/Shortcode_API
http://codex.wordpress.org/Administration_Menus
http://codex.wordpress.org/User:CharlesClarkson/Global_Variables
http://codex.wordpress.org/Function_Reference
http://codex.wordpress.org/Database_Description
http://www.sitepoint.com/10-must-know-skills-for-a-wordpress-plugin-developer/
adding menus to wordpress:
http://codex.wordpress.org/Administration_Menus
adding widget area to theme:
http://codex.wordpress.org/Widgetizing_Themes
http://codex.wordpress.org/Widgets_API#Displaying_Widgets

important terms basis on which filename, functions are created
blog, comment, config, cron, login, mail, settings, signup, trackback, xmlrpc, admin, customize, edit, edit-form, export, freedom, install, link-manager, media, menu, moderation, ms-admin, ms-themes, nav-menus, network, options, plugin, post, profile, tools, widget, ...

why parent of page in wordpress  page


common and config dirs are remaining
error_reporting
filters events

in wp-settings.php go through each WPINC/*.php and write short description about its usage
$.ajax code; understand ajax, rss
inc/theme-options.php, widgets.php
register_shutdown_function — register functions

purpose of msJdIntegration class business wise
group space
how is size change in page handled in jobsearch code
msJdIntegration code in jdview.php
how to set up accnt;

Analysing t1 theme:
index.php — show posts
404.php — what to be shown if page is not found
a.php — statcom table creation
author.php — display author archive pages
comment.php — template for displaying Comments
content-*.php — showing contents for page, image etc


**inside theme (t1):**
header-jd.php
	comscore.php
	header-jd-top.php
		[[config/config.php]]
		header-jd-template2.php
		header-jd-template1.php
		comscore.php
	header-jd-bottom.php
	debugFunction.php
mapset.php
	wp-config.php
functions.php
	inc/site-options.php
	shortcode.php
jdview.php
	curl_reqst.php

**inside page-templates:**
1-column-no-sidebar.php
	banner.php
2-column-left-sidebar.php
	banner.php
2-column-right-sidebar.php
	banner.php
curl_reqst.php
	config.php
front-page.php
	banner.php
	curl_reqst.php
	cluster.php
jdview.php
	common/ms_jd_flags_integration.php
	common/ms_commonFunctions.php
	banner.php
	template/header-jd.php
	careersite.php
	jdview_applyBtnsTop.php
jobsearch_naukri.php
	curl_reqst.php
	cluster.php
jobsearch-template1.php
	config.php
	cluster.php
	qsb.php
jobsearch-template2.php
	config.php
	cluster.php
	qsb.php
people-template.php
	banner.php
a.php
	config/config.php
apply_redirection.php
	config/config.php
jdview_applyBtnsTop.php
	config/config.php
jobdescription-template.php
	jobdescription-template1.php
	jobdescription-template2.php
jobdescription-template1.php
	jdview.php
	social_share.php
jobdescription-template2.php
	jdview.php


common/newsuggest6.php  is used by js/jquery.searchbar.js
msJdIntegration is used by page-templates/jdview.php

http://themesandco.com/customizr/wordpress-actions-filters-and-hooks-a-guide-for-non-developers/
http://www.rarst.net/wordpress/wordpress-core-load/
why we should use child themes: http://www.elegantthemes.com/blog/resources/wordpress-child-theme-tutorial
sequence of hook: http://wordpress.stackexchange.com/questions/162862/wordpress-hooks-run-sequence
cahnge nav-menu content: http://code.tutsplus.com/articles/customizing-your-wordpress-admin--wp-24941
