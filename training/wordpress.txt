Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2014-06-02T17:48:37+05:30


acf pro documentation
https://www.advancedcustomfields.com/resources/

read: digging into wordpress

https://code.tutsplus.com/series/understanding-and-working-with-data-in-wordpress--cms-670
http://theme.fm/wordpress-internals-how-wordpress-boots-up/

load any php file and override it via a child theme exists, via the locate_template function

custom admin pages
https://code.tutsplus.com/series/creating-custom-wordpress-administration-pages--cms-1062

**profiling wordpress:**
https://wordpress.stackexchange.com/questions/176041/how-can-i-diagnose-a-slow-wordpress-admin
http://blog.ulf-wendel.de/2007/php-59-tuning-screws-for-mysqlnd/

**wordpress database **
https://codex.wordpress.org/Database_Description

http://stackoverflow.com/questions/31008552/wordpress-importer-showing-blank-page-after-clicking-the-upload-file-and-import
taxonomy can be : category, tag, menu or custom thing
name and slug for term goes in wp_terms table. to know taxonomy for that slug info is in til_term_taxonomy.
to know meta info about term use wp_termmeta table

**debugging wordpress hooks**
https://www.rarst.net/wordpress/debug-wordpress-hooks/

***** change blog name ******
 select * from wp_options where option_name = 'siteurl';
 select * from wp_options where option_name = 'home';  
change url in wp-config.php

**major functions**
https://codex.wordpress.org/Template_Tags
https://codex.wordpress.org/Conditional_Tags

**wordpress plugin development**
https://scotch.io/tutorials/how-to-build-a-wordpress-plugin-part-1

***** capistrano *****
Capistrano has two main commands: 
cap: which is used for viewing and running the tasks
capify: which is used to set up a Rails project for use with Capistrano.

**Capfile:** is to Capistrano as Makefile is to make and Rakefile is to rake. Capistrano expects a Capfile to be present and to contain the tasks or to include a Ruby file that does. 

***** links *****

http://themesandco.com/customizr/wordpress-actions-filters-and-hooks-a-guide-for-non-developers/
http://www.rarst.net/wordpress/wordpress-core-load/
why we should use child themes: http://www.elegantthemes.com/blog/resources/wordpress-child-theme-tutorial
sequence of hook: http://wordpress.stackexchange.com/questions/162862/wordpress-hooks-run-sequence
cahnge nav-menu content: http://code.tutsplus.com/articles/customizing-your-wordpress-admin--wp-24941


__todo__
writing plugin
writing theme
imp functions, dive into wpdb, wpquery
http://theme.fm/wordpress-internals-how-wordpress-boots-up/
