Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2014-06-11T12:26:49+05:30

====== JS ======
Created Wednesday 11 June 2014
two scopes: 
global, 
local: functional params are local vars

in case of add/removeEventListener use var storing function name.
eg:
removeEventListener("clicked", function( --- ) )

should be used as below:
var func = function( â€”- );
removeEventListener("clicked", func );

refresh page to remove vars
 defined.

handling is different in mozilla and IE browser:
events are fired in capturing phase in IE: click is passed from document to div to button
events are fired in bubbling phase in mozilla: click is passed from button to div to document object

{ } -> creates objects
[ ] -> creates array

*** mozilla js ***

undefined equals NaN in numberic context, a + 10 // NaN
null equals 0 in numeric context , var a = null, a * 10  // logs 0

(+"1.1") + (+"1.1") // 2.2 as (+) , (-) is operator on string to convert into number

JavaScript does not have block statement scope; rather, a variable declared within a block is local to the function (or global scope) that the block resides within. means if-else statments don't define scope of variables.

Another unusual thing about variables in JavaScript is that you can refer to a variable declared later, without getting an exception. This concept is known as hoisting; variables in JavaScript are in a sense "hoisted" or lifted to the top of the function or statement. However, variables that aren't initialized yet will return a value of undefined.

You cannot declare a constant with the same name as a function or variable in the same scope. 
// THIS WILL CAUSE AN ERROR
function f() {};
const f = 5;

var car = { manyCars: {a: "Saab", "b": "Jeep"}, 15: "Mazda", bmw:"bmw" };
car.15 // gives error ?? why
car[15] // mazda OK
car.bmw // bmw OK
console.log( car.manyCars ); // ok
console.log( car[manyCars] ); // gives error

 However, any property name that is not a valid JavaScript identifier (for example, a property name that has a space or a hyphen, or that starts with a number) can only be accessed using the square bracket notation. This notation is also very useful when property names are to be dynamically determined (when the property name is not determined until runtime).

use:
 delete myObj.a // to delete property of object
 delete g // to delete global var g

**java script templates**
https://embedthis.com/goahead/doc/users/jst.html
Javascript Templates (JST) enable the easy creation of dynamic web pages and applications. Javascript Templates are HTML web pages that execute Embedded Javascript on the server before rendering the page back to the client.

we provide js objects, maybe get them trough ajax and hide template inside textarea tad. on calling render it will just show contents. It is similar to smarty for separating logic and presentation layer.
but i think angular js already handles all this.


*** questions ***























