Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2015-05-12T18:10:44+05:30

====== security ======
Created Tuesday 12 May 2015

security attacks: https://www.owasp.org/index.php/Main_Page

content security policy: headers tell browser allowed list of domains for scripts=> avoid XSS
same origin policy: script from one domain/host/port can access DOM of same domain/host/port

http://resources.infosecinstitute.com/can-javascript-access-page-elements/

how jsonp works
http://stackoverflow.com/questions/10193085/confused-on-how-a-jsonp-request-works

a.com										b.com

( ajax wants to access b.com )

then b.com should set 

**authentication and authorization**

authentication: 
multi factor authentication: Oauth, FIDO alliance
internal only authentication: Kerberos, Novell Netware
federated
SSO

authorization: 
role based access control ( RBAC )
atribute based access control ( ABAC )

RBAC can also be configured to implement Mandatory Access Control (MAC) and Discretionary Access Control (DAC) policies.

person goes from UK to US.
In this example the UK is the Identity Provider (also known as the Asserting Party) and the US is the Service Provider (also known as the Relying Party).

PEP
PDP

XACML: 

**challenge response authentication CRAM-MD5**
instead of sending username/password to server. client sends username, server as it knows password( or hash of password ) it creates say number and asks client to increment it. only client using password( or hash of password ) decrypts number, increaments number and sends response.
password doesn't needs to be sent over network. for non-repudiation, avoid maninmiddle attack server may send nonce.

understanding gpg:
https://www.digitalocean.com/community/tutorials/how-to-use-gpg-to-encrypt-and-sign-messages-on-an-ubuntu-12-04-vps

SASL( simple authentication and security layer):  is a framework for authentication and data security in Internet protocols. It decouples authentication mechanisms from application protocols. it allows protocols to choose from various mechanisms wchich implement a series of challenges and responses.
https://www.ietf.org/mail-archive/web/isms/current/msg00063.html
there are various protocols which use SASL: eg: POP, IMAP, XMPP, LDAP etc...
kerberos:
https://www.youtube.com/watch?v=B-gwRDvALrs

LDAP:
data is stored in directory using X.500 format( key value pair ). this data can be accessed using LDAP.
LDAP uses SAML which might use kerberos mechanism for authentication. 
https://www.youtube.com/watch?v=F2nFtlS8uEo

SSH protocol:
https://www.ietf.org/rfc/rfc4254.txt


**todo:**
Oauth vs kerberos
SAML

**questions:**
why so many authentication protocols, what is use of each
